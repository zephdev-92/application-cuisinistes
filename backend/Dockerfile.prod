# backend/Dockerfile.prod
# Stage 1: Build
FROM node:20-alpine AS builder

WORKDIR /app

# Copier les fichiers de dépendances
COPY package*.json ./
COPY tsconfig.json ./

# Installer les dépendances
RUN npm ci --only=production

# Copier le code source
COPY src/ ./src/

# Build de l'application
RUN npm run build

# Stage 2: Production
FROM node:20-alpine AS production

# Créer un utilisateur non-root
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nodejs -u 1001

WORKDIR /app

# Copier les dépendances de production
COPY package*.json ./
RUN npm ci --only=production && npm cache clean --force

# Copier le build depuis le stage précédent
COPY --from=builder /app/dist ./dist

# Créer les répertoires nécessaires
RUN mkdir -p logs/audit uploads temp
RUN chown -R nodejs:nodejs /app

# Variables d'environnement par défaut
ENV NODE_ENV=production
ENV PORT=5000

# Passer à l'utilisateur non-root
USER nodejs

# Exposer le port
EXPOSE 5000

# Healthcheck
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node dist/healthcheck.js || exit 1

# Commande de démarrage
CMD ["node", "dist/server.js"]
